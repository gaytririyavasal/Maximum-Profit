#  File: maximum_profit.py

#  Description: This program is designed to find the maximum possible profit generated by purchasing a subset of the houses in the list and selling them in the following year.

#  Student Name: Gaytri Riya Vasal

#  Course Name: CS 313E

#  Unique Number: 86439

#  Date Created: 7/20/2022

#  Date Last Modified: 7/23/2022

import sys

# Dynamic Programming: Bottom-Up

def knapsack(values, weights, n, capacity):
    
    dp = [[0 for x in range(capacity + 1)] for x in range(n + 1)]  # Instantiate and create dp array

    for item in range(n + 1):  # Traverse all items

        for weight in range(capacity + 1):  # Traverse all weights

            # If C[i, w] is the maximum value obtained from a knapsack of size w while using items from the subset {1, . . . , i}, C[i, 0] = 0 for all items, and C[0, w] = 0 for all capacities
            if item == 0 or weight == 0:

                dp[item][weight] = 0

            # If the item can fit into the knapsack, find the maximum value between the previous item in the dp table and the recently calculated value that can fit into the knapsack
            elif weights[item - 1] <= weight:

                dp[item][weight] = max(dp[item - 1][weight], values[item - 1] + dp[item - 1][weight - weights[item - 1]])

            # Otherwise, duplicate the previous value in the dp table; item is too big
            else:
                dp[item][weight] = dp[item - 1][weight]

    return round(dp[n][capacity], 2) # Round answer to two decimal places due to memory approximation errors

def main():

    # The first line is the amount of investment in million USD which is an integer number.
    line = sys.stdin.readline()
    line = line.strip()
    money = int(line)

    # The second line includes an integer number which is the number of houses listed for sale.
    line = sys.stdin.readline()
    line = line.strip()
    num_houses = int(line)

    # The third line is a list of house prices in million dollar which is a list of \textit{integer numbers} (Consider that house prices can be an integer number in million dollar only).
    line = sys.stdin.readline()
    line = line.strip()
    prices = line.split(",")
    for i in range(0, len(prices)):
        prices[i] = int(prices[i])

    # Read the forecasted value increases
    line = sys.stdin.readline()
    line = line.strip()
    increase = line.split(",")
    for i in range(0, len(increase)):
        increase[i] = float(increase[i])

    # Create list of profits
    profits = []
    for i in range(len(prices)):

        profits.append(prices[i] * (increase[i] / 100))

    result =  knapsack(profits, prices, num_houses, money)

    print(result)

main()
